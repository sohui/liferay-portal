definition {

	@summary = "Helper function to add a WC Folder via JSON"
	macro _addFolder {
		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(parentFolderId))) {
			var parentFolderId = "0";
		}

		var curl = '''
			${portalURL}/api/jsonws/journal.journalfolder/add-folder \
				-u test@liferay.com:test \
				-d groupId=${groupId} \
				-d parentFolderId=${parentFolderId} \
				-d name=${folderName} \
				-d description=''
		''';

		var groupName = JSONGroup._getGroupName(groupId = "${groupId}");

		echo("## Create a 'Web Content Folder' with the following info using JSONWS:");

		echo("## * Group Name: ${groupName}");

		echo("## * Parent Folder Id: ${folderId}");

		echo("## * Name: ${folderName}");

		com.liferay.poshi.runner.util.JSONCurlUtil.post("${curl}");
	}

	@summary = "Helper function to add a WC Article via JSON"
	macro _addWebContent {
		var portalURL = JSONCompany.getPortalURL();

		if (isSet(contentMap)) {
			var contentXML = JSONWebcontent._localizedConvertToXML(contentMap = "${contentMap}");
		}
		else {
			var contentXML = JSONWebcontent._convertToXML(content = "${content}");
		}

		if (isSet(description)) {
			var descriptionMap = '''{"en_US":"${description}"}''';
		}
		else {
			var descriptionMap = "{}";
		}

		if (!(isSet(folderId))) {
			var folderId = "0";
		}

		if (!(isSet(serviceContext))) {
			var serviceContext = "{}";
		}

		if (isSet(titleMap)) {
			var titleMap = JSONUtil2._convertLocalizedListToMap(listMap = "${titleMap}");
		}
		else {
			var titleMap = '''{"en_US":"${title}"}''';
		}

		var curl = '''
			${portalURL}/api/jsonws/journal.journalarticle/add-article \
				-u test@liferay.com:test \
				-d groupId=${groupId} \
				-d folderId=${folderId} \
				-d titleMap=${titleMap} \
				-d descriptionMap=${descriptionMap} \
				-d content=${contentXML} \
				-d ddmStructureKey=BASIC-WEB-CONTENT \
				-d ddmTemplateKey=BASIC-WEB-CONTENT \
				-d serviceContext=${serviceContext}
		''';

		var groupName = JSONGroup._getGroupName(groupId = "${groupId}");

		echo("## Create a 'Web Content' with the following info using JSONWS:");

		echo("## * Group Name: ${groupName}");

		echo("## * Folder Id: ${folderId}");

		echo("## * Title: ${title}");

		echo("## * Description: ${description}");

		echo("## * Content: ${content}");

		com.liferay.poshi.runner.util.JSONCurlUtil.post("${curl}");
	}

	@summary = "Helper function to help input content html info"
	macro _convertToXML {

		var contentXML = '''<root available-locales="en_US" default-locale="en_US"> <dynamic-element name="content" type="text_area" index-type="text"> <dynamic-content language-id="en_US">${content}</dynamic-content> </dynamic-element> </root> ''';

		return "${contentXML}";
	}

	@summary = "Helper function to get the 'folderId' for the folder '${folderName}'"
	macro _getFolderIdByFolderName {
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/journal.journalfolder/get-folders \
				-u test@liferay.com:test \
				-d groupId=${groupId}
		''';

		var folderId = JSONCurlUtil.post("${curl}", "$.[?(@['name'] == '${folderName}')]['folderId']");
		var folderId = StringUtil.replace("${folderId}", "[&quot;", "");
		var folderId = StringUtil.replace("${folderId}", "&quot;]", "");

		echo("## Searching for 'folderId' for the folder '${folderName}' using JSONWS:");

		echo("## * folderId: ${folderId}");

		if ("${folderId}" == "[]") {
			fail("FAIL. Cannot find folder.");
		}
		else {
			return "${folderId}";
		}
	}

	macro _getGroupId {
		if (isSet(groupName)) {
			var groupId = JSONGroup._getGroupIdByName(groupName = "${groupName}");
		}
		else {
			echo("Using ThemeDisplay to retrieve groupId since groupName is not set");

			var groupId = JSONUtil2._getScopeGroupId();
		}

		return "${groupId}";
	}

	@summary = "Helper function to help input localized content html info"
	macro _localizedConvertToXML {
		// Get list of localizations used

		var localeList = "";

		for (var i : list "${contentMap}") {
			var locale = StringUtil.extractFirst("${i}", ":");
			var localeList = "${localeList},${locale}";
		}

		var localeList = RegexUtil.replace("${localeList}", ",(.*)", "1");

		// Build dynamic content

		var dynamicContent = "";

		for (var i : list "${contentMap}") {
			var locale = StringUtil.extractFirst("${i}", ":");
			var translated = StringUtil.extractLast("${i}", ":");

			var dynamicContent = '''${dynamicContent} <dynamic-content language-id="${locale}">${translated}</dynamic-content>''';
		}

		// Build XML

		var contentXML = '''<root available-locales="${localeList}" default-locale="en_US"> <dynamic-element name="content" type="text_area" index-type="text"> ${dynamicContent} </dynamic-element> </root> ''';

		return "${contentXML}";
	}

	@summary = "Add a localized WC Article via JSON using the Basic Web Content Structure with Title: '${title}' or '${titleMap}', Content: '${content}' or '${contentMap}', and Site Name: ${groupName}. The mapped inputs should be inputted in a format the same as 'en_US:Title,es_ES:Titulo'"
	macro addBasicWebContentLocalized {
		var groupId = JSONWebcontent._getGroupId(groupName = "${groupName}");

		JSONUtil2._exclusiveOrCheck(
			A = "${title}",
			B = "${titleMap}",
			failMessage = "Please only set &apos;title&apos; or only &apos;titleMap&apos; but not both or none.");

		JSONUtil2._exclusiveOrCheck(
			A = "${content}",
			B = "${contentMap}",
			failMessage = "Please only set &apos;content&apos; or only &apos;contentMap&apos; but not both or none.");

		if (!(isSet(serviceContext))) {
			var serviceContext = JSONServiceContextUtil.setServiceContext(
				addGuestPermissions = "true",
				assetCategoryIds = "${assetCategoryIds}",
				assetTagNames = "${assetTagNames}",
				workflowAction = "${workflowAction}");
		}

		JSONWebcontent._addWebContent(
			content = "${content}",
			contentMap = "${contentMap}",
			description = "${description}",
			folderId = "${folderId}",
			groupId = "${groupId}",
			serviceContext = "${serviceContext}",
			title = "${title}",
			titleMap = "${titleMap}");
	}

	@summary = "Add a WC Folder with Folder Name '${folderName}' to the Site '${groupName}'"
	macro addFolder {
		var groupId = JSONWebcontent._getGroupId(groupName = "${groupName}");

		if (!(isSet(folderName))) {
			fail("Please set 'folderName'.");
		}

		JSONWebcontent._addFolder(
			folderName = "${folderName}",
			groupId = "${groupId}");
	}

	@summary = "Add a WC Article with Title '${title}' and Content '${content}' to the Site '${groupName}' via JSON"
	macro addWebContent {
		var groupId = JSONWebcontent._getGroupId(groupName = "${groupName}");

		if (!(isSet(content))) {
			fail("Please set 'content.'");
		}

		if (isSet(folderName)) {
			var folderId = JSONWebcontent._getFolderIdByFolderName(
				folderName = "${folderName}",
				groupId = "${groupId}");
		}

		if (!(isSet(serviceContext))) {
			var serviceContext = JSONServiceContextUtil.setServiceContext(
				addGuestPermissions = "true",
				assetCategoryIds = "${assetCategoryIds}",
				assetTagNames = "${assetTagNames}",
				workflowAction = "${workflowAction}");
		}

		if (!(isSet(title))) {
			fail("Please set 'title.'");
		}

		JSONWebcontent._addWebContent(
			content = "${content}",
			description = "${description}",
			folderId = "${folderId}",
			groupId = "${groupId}",
			serviceContext = "${serviceContext}",
			title = "${title}");
	}

	macro getWebContentIdByURLTitle {
		if (!(isSet(urlTitle))) {
			fail("Please set 'urlTitle'.");
		}

		var groupId = JSONWebcontent._getGroupId(groupName = "${groupName}");
		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/journal.journalarticle/get-display-article-by-url-title \
				-u test@liferay.com:test \
				-d groupId=${groupId} \
				-d urlTitle='${urlTitle}'
		''';

		var articleId = JSONCurlUtil.post("${curl}", "$.[?(@['urlTitle'] == '${urlTitle}')]['articleId']");
		var articleId = StringUtil.replace("${articleId}", "[&quot;", "");
		var articleId = StringUtil.replace("${articleId}", "&quot;]", "");

		echo("## * articleId: ${articleId}");

		return "${articleId}";
	}

}